stages:
  - test
  - build
  - deploy

image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
services:

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

test:
  stage: test
  script:
    - npm install
    #- npm test

build:
  image: docker:19
  services:
  - docker:19-dind
  stage: build
  variables:
    DOCKER_TLS_CERTDIR: ""
  script: 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --pull -t $CI_REGISTRY/ulrichdahl/fleet-manager-bot:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY/ulrichdahl/fleet-manager-bot:$CI_COMMIT_REF_SLUG
  only:
    - master

deploy_staging:
  image: $CI_REGISTRY/ulrichdahl/fleet-manager-bot:$CI_COMMIT_REF_SLUG
  stage: deploy
  script:
    - echo "Deploy to staging server"
    - echo '{"token":"$DISCORD_TOKEN","server":"$DISCORD_SERVER","channel":"$DISCORD_CHANNEL","urlPrefix":"$FLEET_MANAGER_API_URI"}' > config.json
    - cat config.json
  environment:
    name: staging
    url: https://staging.example.com
  only:
    - master

push_to_latest:
  image: docker:19
  services:
  - docker:19-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker tag $CI_REGISTRY/ulrichdahl/fleet-manager-bot:$CI_COMMIT_REF_SLUG $CI_REGISTRY/ulrichdahl/fleet-manager-bot:latest
    - docker push $CI_REGISTRY/ulrichdahl/fleet-manager-bot:latest
  when: manual
  only:
    - master

deploy_prod:
  image: $CI_REGISTRY/ulrichdahl/fleet-manager-bot:latest
  stage: deploy
  script:
    - echo "Deploy to production server"
    - echo '{"token":"$DISCORD_TOKEN","server":"$DISCORD_SERVER","channel":"$DISCORD_CHANNEL","urlPrefix":"$FLEET_MANAGER_API_URI"}' > config.json
  environment:
    name: production
    url: https://example.com
  dependencies: 
    - push_to_latest
  only:
    - master
